name: Release

on:
  push:
    tags:
      - "v*"

env:
  LIBCLANG_PATH: C:\Users\runneradmin\scoop\apps\llvm\current\bin
  CARGO_TOKEN: ${{ secrets.CARGO_TOKEN }}

jobs:
  build_windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: |
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install llvm ninja
      - run: echo "::add-path::~\scoop\shims"
      - run: |
          cargo fmt --all -- --check
          cargo clippy --all-targets --all-features
          cargo build --release

  publish_sys:
    name: Publish sys crate
    runs-on: windows-latest
    needs: [build_windows]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: |
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install llvm ninja
      - run: echo "::add-path::~\scoop\shims"
      - run: |
          cargo login ${env:CARGO_TOKEN}
          # We ignore failed publishes to avoid failing the build if publishing new synthizer versions but existing synthizer-sys versions.
          # So let's explicitly run a package operation to avoid pushing broken code.
          cargo package --manifest-path synthizer-sys/Cargo.toml
          cargo publish --manifest-path synthizer-sys/Cargo.toml || true

  publish:
    name: Publish
    runs-on: windows-latest
    needs: [build_windows]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: |
          Set-ExecutionPolicy RemoteSigned -scope CurrentUser
          Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
          scoop install llvm ninja
      - run: echo "::add-path::~\scoop\shims"
      - run: |
          cargo login ${env:CARGO_TOKEN}
          cargo publish --manifest-path synthizer-rs/Cargo.toml
